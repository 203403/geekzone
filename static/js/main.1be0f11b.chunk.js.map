{"version":3,"sources":["Componentes/CrudForm.js","Componentes/CrudTableFIla.js","Componentes/CrudTable.js","Componentes/CrudApp.js","banner.png","gidCod.gif","App.js","reportWebVitals.js","index.js"],"names":["initialForm","id","usuario","apodo","contrasenia","CrudForm","agregarRegistro","actualizarRegistro","datoEditar","setDatoEditar","useState","form","setForm","useEffect","handleChange","e","target","name","value","handleReset","class","onSubmit","preventDefault","alert","type","placeholder","onChange","onClick","CrudTableFila","el","borrarRegistro","CrudTable","data","length","map","colSpan","DatosInicial","CrudApp","db","setDb","Date","now","console","log","push","nuevoDato","window","confirm","filter","App","src","gif","banner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1be0f11b.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst initialForm={\r\n    id:null,\r\n    usuario:\"\",\r\n    apodo:\"\",\r\n    contrasenia:\"\",\r\n};\r\n\r\nconst CrudForm=({agregarRegistro, actualizarRegistro, datoEditar, setDatoEditar})=>{\r\n    const [form, setForm] = useState(initialForm);\r\n\r\n    useEffect (()=>{\r\n        if(datoEditar){\r\n            setForm(datoEditar);\r\n        }else {\r\n            setForm(initialForm);\r\n        }\r\n    \r\n    }, [datoEditar]);\r\n\r\n    const handleChange=(e) =>{\r\n        setForm({...form, [e.target.name]:e.target.value,});\r\n    };\r\n\r\n    const handleSubmit=(e) =>{\r\n        e.preventDefault();\r\n        if(!form.usuario || !form.apodo || !form.contrasenia){\r\n            alert(\"Datos incompletos\")\r\n            return;\r\n        }\r\n        if(form.id===null){\r\n            agregarRegistro(form);\r\n        }else{\r\n            actualizarRegistro(form);\r\n        }\r\n\r\n        handleReset();\r\n    };\r\n\r\n    const handleReset=(e) =>{\r\n        setForm(initialForm);\r\n        setDatoEditar(null);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h3 class=\"segundo\">&nbsp;&nbsp;&nbsp;Agregar</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"usuario\" placeholder=\"@Usuario\" onChange={handleChange} value={form.usuario}/>\r\n                <input type=\"text\" name=\"apodo\" placeholder=\"Apodo\"  onChange={handleChange} value={form.apodo}/>\r\n                <input type=\"text\" name=\"contrasenia\" placeholder=\"Contrasenia\"  onChange={handleChange} value={form.contrasenia}/>\r\n                <input type=\"submit\" value=\"Enviar\"/>\r\n                <input type=\"reset\" value=\"Limpiar\" onClick={handleReset}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudForm","import React from \"react\";\r\n\r\nconst CrudTableFila = ({el, setDatoEditar, borrarRegistro}) =>{\r\n    let{id, usuario, apodo, contrasenia}=el;\r\n    return (\r\n        <tr>\r\n            <td>{usuario}</td>\r\n            <td>{apodo}</td>\r\n             <td>\r\n                <button onClick={() => setDatoEditar(el) }>Editar</button>\r\n                <button onClick={() => borrarRegistro(id) }>Eliminar</button>\r\n             </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default CrudTableFila;","import React from \"react\";\r\nimport CrudTableFila from \"./CrudTableFIla\"\r\n\r\nconst CrudTable = ({data, setDatoEditar, borrarRegistro}) =>{\r\n    return(\r\n        <div class=\"tercer\">\r\n            <h3 class=\"segundo\">Tabla de Datos</h3>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th >Usuario</th>\r\n                        <th >Apodo</th>\r\n                        <th >Opciones</th>\r\n                    </tr>\r\n                    {data.length > 0?\r\n                        \r\n                        (data.map((el)=>(<CrudTableFila\r\n                            key={el.id}\r\n                            el={el}\r\n                            setDatoEditar={setDatoEditar}\r\n                            borrarRegistro={borrarRegistro}\r\n                        />))):\r\n                        (<tr>\r\n                            <td colSpan=\"3\">Sin Datos</td>\r\n                        </tr>) }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudTable","import React, { useState } from \"react\";\r\nimport CrudForm from './CrudForm';\r\nimport CrudTable from './CrudTable';\r\n\r\n\r\nconst DatosInicial=[\r\n    {id:1,\r\n    usuario:\"@user_01\",\r\n    apodo:\"Manolo\",\r\n    contrasenia:\"pass01\",},\r\n\r\n    {id:2,\r\n    usuario:\"@user_02\",\r\n    apodo:\"Ariana\",\r\n    contrasenia:\"pass02\",},\r\n    \r\n    {id:3,\r\n    usuario:\"@user_03\",\r\n    apodo:\"Paolo\",\r\n    contrasenia:\"pass03\",},\r\n\r\n    {id:4,\r\n    usuario:\"@user_04\",\r\n    apodo:\"Hachi\",\r\n    contrasenia:\"pass04\",},\r\n\r\n    {id:5,\r\n    usuario:\"@user_05\",\r\n    apodo:\"Filanito\",\r\n    contrasenia:\"pass05\",},\r\n];\r\n\r\nconst CrudApp=() =>{\r\n    const [db, setDb] = useState(DatosInicial);\r\n    const [datoEditar, setDatoEditar] = useState(null);\r\n\r\n    const agregarRegistro=(data)=>{\r\n        data.id=Date.now();\r\n        console.log(data);\r\n        setDb([...db, data]);\r\n        DatosInicial.push(setDb);\r\n    };\r\n\r\n    const actualizarRegistro=(data)=>{\r\n        let nuevoDato = db.map((el)=> (el.id===data.id? data:el));\r\n        setDb(nuevoDato);\r\n    };\r\n\r\n    const borrarRegistro=(id)=>{\r\n        let borrar = window.confirm(\r\n            `Estas seguro de eliminar el registro?`\r\n        );\r\n\r\n        if(borrar){\r\n            let nuevoDato=db.filter((el)=>el.id !== id);\r\n            setDb(nuevoDato)\r\n        }else{\r\n            return;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h2 id=\"titulo\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;◐Administración de usuarios◑</h2>\r\n            <CrudForm\r\n                agregarRegistro={agregarRegistro}\r\n                actualizarRegistro={actualizarRegistro}\r\n                datoEditar={datoEditar}\r\n                setDatoEditar={setDatoEditar}\r\n            />\r\n\r\n            <CrudTable\r\n                data={db}\r\n                setDatoEditar={setDatoEditar}\r\n                borrarRegistro={borrarRegistro}\r\n            />\r\n\r\n            <table></table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudApp","export default __webpack_public_path__ + \"static/media/banner.ec22b2b8.png\";","export default __webpack_public_path__ + \"static/media/gidCod.9f81416c.gif\";","import './App.css';\r\nimport CrudApp from './Componentes/CrudApp';\r\nimport banner from './banner.png';\r\nimport gif from './gidCod.gif';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <div id=\"container\">\r\n    <img src={gif} class=\"gif\"/>\r\n    <header id=\"encabezado\">\r\n      \r\n      <img src={banner} class=\"banner\"/>\r\n    </header>\r\n    <CrudApp/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}